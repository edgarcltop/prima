#--- VDN specific parameters ---
# Monte Carlo Q_tot Learning

# use epsilon greedy action selector
action_selector: "epsilon_greedy"
epsilon_start: 1.0
epsilon_finish: 0.05
epsilon_anneal_time: 100000

runner: "parallel"
batch_size_run: 16
buffer_size: 64
batch_size: 64
accumulated_episodes: 4

t_max: 10050000

# use the Q_Learner to train
mac: "n_mac"
agent: "n_rnn" 
agent_output_type: q
rnn_hidden_dim: 256

learner: "online_q_learner"
mixer: "vdn"
lr: 0.0005 # Learning rate for agents
td_lambda: 0.95
optimizer: 'adam'
gamma: 0.999
mini_epochs: 5
eps_clip: 0.2

# value normalization
use_value_norm: True

# orthogonal init for DNN
use_orthogonal: True
gain: 0.01

# rnn layer normalization
use_layer_norm: True

name: "vdn_online_env=16_adam_td_lambda"
