# --- VDN specific parameters ---

# use epsilon greedy action selector
action_selector: "epsilon_greedy"
epsilon_start: 1.0
epsilon_finish: 0.1
epsilon_anneal_time: 100000

runner: "parallel"
batch_size_run: 8
buffer_size: 5000
batch_size: 128

t_max: 10050000

# update the target network every {} episodes
target_update_interval: 200

# use the Q_Learner to train
mac: "n_mac"
agent: "n_rnn" 
agent_output_type: q
rnn_hidden_dim: 128

learner: "nq_learner"
mixer: "vdn"
lr: 0.001 # Learning rate for agents
td_lambda: 0.5
optimizer: 'adam'

# orthogonal init for DNN
use_orthogonal: True
gain: 0.01

# rnn layer normalization
use_layer_norm: False

# Priority experience replay
use_per: False
per_alpha: 0.6
per_beta: 0.4
return_priority: True

name: "vdn_env=8_adam_td_lambda"
