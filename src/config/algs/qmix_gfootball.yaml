# --- QMIX specific parameters ---
# This profile enables various types of tricks
# such as feature normalization, orthogonal initialization, Priority experience replay

# use epsilon greedy action selector
action_selector: "epsilon_greedy"
epsilon_start: 1.0
epsilon_finish: 0.05
epsilon_anneal_time: 100000

runner: "parallel"
batch_size_run: 8
buffer_size: 5000
batch_size: 128

t_max: 10050000

# update the target network every {} episodes
target_update_interval: 400

# use the Q_Learner to train
mac: "n_mac"
agent: "n_rnn" # or noisy_rnn
agent_output_type: q

learner: "nq_learner"
mixer: "qmix"
mixing_embed_dim: 32
hypernet_embed: 64
lr: 0.001 # Learning rate for agents
td_lambda: 0.3
optimizer: 'adam'

# rnn layer normalization
use_layer_norm: False

# orthogonal init for DNN
use_orthogonal: True
gain: 0.01

# Priority experience replay
use_per: True
per_alpha: 0.6
per_beta: 0.4
return_priority: True

name: "qmix_per_env=8_adam_td_lambda"
